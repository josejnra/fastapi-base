name: CI Workflow

on: [ push ]

jobs:

  test:
    runs-on: ubuntu-latest
    env:
      DOCKER_CACHE: /tmp/.buildx-cache/
      DOCKER_CACHE_ARGS: --cache-from type=local,src=$(DOCKER_CACHE) --cache-to type=local,mode=max,dest=$(DOCKER_CACHE)
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install poetry
        run: pipx install poetry

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install Dependencies
        run: poetry install --all-extras

      - name: Code Quality Check
        run: poetry run mypy .

      - name: Test
        run: poetry run pytest --cov --cov=api/ --cov-branch --cov-fail-under=100

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image
        run: | 
          docker buildx build -t fastapi-base . 

      # TODO: scan for vulnerabilities in the docker image
