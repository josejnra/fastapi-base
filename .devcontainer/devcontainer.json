// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/python-3-postgres
// Update the VARIANT arg in docker-compose.yml to pick a Python version
{
    "name": "Python 3 & PostgreSQL",
    "dockerComposeFile": "docker-compose.yaml",
    "service": "app",
    "workspaceFolder": "/workspace",
    // Configure tool-specific properties.
    "customizations": {
        // Configure properties specific to VS Code.
        "vscode": {
            // Set *default* container specific settings.json values on container create.
            "settings": {
                "sqltools.connections": [
                    {
                        "name": "Container database",
                        "driver": "PostgreSQL",
                        "previewLimit": 50,
                        "server": "localhost",
                        "port": 5432,
                        "database": "postgres",
                        "username": "postgres",
                        "password": "postgres"
                    }
                ],
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
                "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
                "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
                "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
                "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
                "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
                "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
                "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
                "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
                "python.testing.pytestPath": "/usr/local/py-utils/bin/pytest",
                "emeraldwalk.runonsave": {
                    "commands": [
                        {
                            "match": ".py",
                            "isAsync": false,
                            "cmd": "npm run test"
                        }
                    ]
                },
                "python.pythonPath": "/workspace/.venv/bin/python",
                "python.defaultInterpreterPath": "/workspace/.venv/bin/python",
                "python.venvFolders": [
                    "/workspace/.venv"
                ],
                "terminal.integrated.profiles.linux": {
                    "poetry-shell": {
                        "path": "poetry",
                        "args": [
                            "shell"
                        ]
                    }
                },
                "terminal.integrated.defaultProfile.linux": "poetry-shell"
            },
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.python",
                "ms-python.vscode-pylance",
                "eamodio.gitlens",
                "waderyan.gitblame",
                "matangover.mypy",
                "ryanluker.vscode-coverage-gutters",
                "emeraldwalk.RunOnSave",
                "42Crunch.vscode-openapi",
                "mermade.openapi-lint",
                "mtxr.sqltools",
                "mtxr.sqltools-driver-pg",
                "ms-azuretools.vscode-docker",
                "cschleiden.vscode-github-actions"
            ]
        }
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // This can be used to network with other containers or the host.
    "forwardPorts": [
        5001,
        5432,
        8000
    ],
    // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode",
    // "features": {
    //     "docker-from-docker": "latest"
    // },
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": ".devcontainer/setup.sh"
}
